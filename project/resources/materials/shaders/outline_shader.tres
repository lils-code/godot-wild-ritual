[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode unshaded, shadows_disabled;

varying mat4 CAMERA;

void vertex() {
	POSITION = vec4(VERTEX, 1.0);
	CAMERA = CAMERA_MATRIX;
}

void fragment() {
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	vec3 linear_depth = view.xyz / view.w;

	vec3 x = cross(dFdx(linear_depth), dFdy(linear_depth));
	x = normalize(x);
	
	ALBEDO = x;
}"
